=Transformar Modelo Entidad-Relación a Modelo Relacional

El programa se encargará de interpretar un archivo en el que se definira el esquema Entidad-Relacion, bajo la sintaxis a continuación y este lo mostrará con una nueva sintaxis de manera relacional.

=Sintaxis para archivo Entidad-Relacion

==Estructura del archivo

El archivo deberan seguir la siguiente estructura

  |-- Tipos de Entidad
  |--
  |--
  |--
  /vinculos
  |--
  |--

Las lineas "|- - Tipos de Entidad" y "|--", no deben incluirse en el archivo simplemente hacemos referencia a que primero van los tipos de entidad y posteriormenete los vínculos con la linea divisora.

La linea "/vinculos" es muy importante para el interprete, si no es encontrada, marcara un error.

=Estructura de tipos de entidad

Cada tipo de entidad deberá ir en una nueva linea, con el siguiente formato obligatorio
  "nombre_tipo_entidad",atributos,separados,por,comas

=Formato para entidades

==Atributo simple

Cuando se desea especificar un atributo simple, unicamente se coloca en el lugar deseado separado por una "," (coma)

  "nombre_tipo_entidad",atributos,simples

==Llave primaria

Las llaves primaria deben ir entre llaves, como sigue

  "nombre_tipo_entidad",{llave_primaria},atributos,simples

Nota: No es importante el orden de donde se coloque la llave, puede ir en cualquiera parte y precedido por otro tipo de atributo

==Llave parcial

Las llaves parciales son identificadas entre corchetes, con la siguiente sintaxis
  "nombre_tipo_entidad",[llave_parcial],atributos,simples

==Atributos multivaluados

Los atributos multivaluados deberan ir entre asteriscos
  "nombre_entidad",*atributo_multivaluado*,{llave_primaria},otro

==Atributos compuestos

Esta es quizá la sintaxis más compleja, primero debemos establecer el nombre del atributo y después el nombre de quienes lo componen
  "nombre_tipo_entidad",otro,{llave_primaria},C(|nombre_compuesto|:atributos;que;lo;componen)

==Combinaciones posibles

===Llaves parciales compuestas
Como sabemos en un modelo ER podemos tener llaves parciales que sean compuestas y para eso ocupamos la sintaxis:
  "nombre_tipo_entidad",[C(|llave_compuesta|:quienes;lo;componen)]

===Multivaluados compuestos
  "nombre_tipo_entidad",*C(|nombre_multivaluado_compuesto|:quienes;lo;componen)*

=Vínculos

==Vinculos binarios
Los vinculos deberan especificar el nombre del vínculo,tipos de entidad que participan en el (solo deben ser dos entidades, para este caso), la participacion y cardinalidad de cada uno de los vínculos, seguidos, opcionalmente, por los atributos de dicho vínculo, todo esto separado por una "," (coma), como sigue

  "nombre_vinculo",0r5,p1pN,/atrutos;opcionales/	--- (1)

===Vinculos binarios: entidades participantes

Las entidades participantes deben indicar el índice del tipo de entidad, comenzando en cero, este índice se establece, según se establezcan los tipos de entidad en el bloque previo, las entidades que se relacionen deberan ir separadas por una "r", al interprete le es indiferente si es minúscula o mayúscula, por estética, se pone minúscula.

  El tipo de entidad 0 se relaciona con el tipo de entidad 5

===Vinculos binarios: cardinalidad y participacion

Lo primero que se indica en este bloque es la participacion que tiene el primer tipo de entidad indicado en el paso anterior con la segunda; lo mismo sucede para la cardinalidad y se lee, tomando el ejemplo anterior:

  El tipo de entidad 0 tiene participacion parcial en este vínculo, mientras que el tipo de entidad 5 tiene parcipacion parcial en el vinculo, la cardinalidad es 1:N del tipo de entidad 0 al tipo de entidad 5

===Vinculos binarios: atributos

Los atributos pueden ser de cualquier tipo, como si de tipos de entidades se tratace. *IMPORTANTE* notar que van separados por ";" (punto y coma) en vez de "," (coma)

==Vinculos unarios

Los vinculos enarios se separan enter si por una *u* y debe indicar la participacion de sus entidades
  "nombre_vinculo",(0r5)U(0r4),(p1pN)U(pNp1),/atributos,vinculo/

=Ejemplo de un Entidad-Relacion, escrito en la sintaxis previamente definida

  "tipo_avion",{modelo},capacidad,peso
  "hangar",{numero},lugar,capacidad,*colores*
  "piloto",rest,{numeroLicencia}
  "empleado",turno,{nss},salario
  "dueno",{nss},nombre
  "avion",{nreg}
  "servicio",[C(|fecha/codT|:fecha;codT)],horas
  
  
  /vinculos
  "tipoAvion_avion",0r5,p1pN
  "tipoAvion_piloto",0r2,pMpN
  "avion_hangar",5r1,tNp1
  "avion_sevicio",5d6,p1pN
  "avion_dueno",5r4,pMpN
  "sevicio_empleado",6r3,pMpN

==Nota: El interprete actualmente no cuenta con validación, por lo cual es de suma importancia no cometer un error de sintaxis, es decir que todo este bien cerrado y no poner cosas cuando no se necesitan por ejemplo

  "nombre_vinculo",(0r5)U,(p1pN)

Lo anterior seria un error que provocaría el cierre del programa.